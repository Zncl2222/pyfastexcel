# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Upload Python Package

on:
  push:
    tags:
      - '*'
  release:
    types: [published]

jobs:
  build-shared-library:
    strategy:
      matrix:
      # Currently use ubuntu 20.04 to aviod GLIBC verion issue
        runs-on: [ubuntu-20.04, windows-latest, macos-13]
    runs-on: ${{ matrix.runs-on }}
    if: startsWith(github.ref, 'refs/tags/') || github.event_name != 'release'
    steps:
      - uses: actions/checkout@v4
      - name: Set up Golang
        uses: actions/setup-go@v5
        with:
          go-version: 1.24
          check-latest: true
      - name: Build windows shared library
        run: |
          go env -w CGO_ENABLED="1"
          make
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel
      - name: Build the wheel
        if: matrix.runs-on == 'windows-latest'
        run: python setup.py bdist_wheel --plat-name=win-amd64
      - name: Build the wheel ubuntu
        if: matrix.runs-on == 'ubuntu-20.04'
        run: python setup.py bdist_wheel --plat-name=manylinux2014_x86_64
      - name: Build the wheel macos
        if: matrix.runs-on == 'macos-13'
        run: python setup.py bdist_wheel --plat-name=macosx_10_9_x86_64

      - uses: actions/upload-artifact@v4
        with:
          name: python-wheel-${{ matrix.runs-on }}
          path: dist/*.whl

  test-release:
    runs-on: ubuntu-latest
    needs: [build-shared-library]
    permissions:
      id-token: write
    if: startsWith(github.ref, 'refs/tags/') && github.event_name != 'release'
    steps:
      - uses: actions/checkout@v4
      - name: Download All Artifacts
        uses: actions/download-artifact@v4
        with:
          merge-multiple: true
          path: dist/

      - name: Publish distribution to Test PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          verbose: true
          repository-url: https://test.pypi.org/legacy/

  test-download-and-run:
    needs: test-release
    name: Test Package Installation on Multiple OS
    if: always()
    runs-on: ${{ matrix.runs-on }}
    strategy:
      matrix:
        runs-on: [ubuntu-latest, ubuntu-22.04, ubuntu-20.04, windows-latest, macos-13]
        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12']

    steps:
      - name: Checkout code (optional, for tests, but package will be pip-installed)
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Remove local package from PYTHONPATH on Linux/macOS
        if: runner.os != 'Windows'
        run: |
          rm -rf ./pyfastexcel

      - name: Remove local package from PYTHONPATH on Windows
        if: runner.os == 'Windows'
        run: Remove-Item -Recurse -Force .\pyfastexcel
        shell: pwsh

      - name: Install published package from PyPI
        run: |
          python -m pip install --upgrade pip
          pip install eval-type-backport
          pip install -i https://test.pypi.org/simple/ pyfastexcel --pre --extra-index-url https://pypi.org/simple/

      - name: Run tests
        run: |
          python examples/full_examples.py

  release-job:
    runs-on: ubuntu-latest
    needs: [build-shared-library]
    permissions:
      id-token: write
    if: github.event_name == 'release' && github.event.action == 'published'
    steps:
      - uses: actions/checkout@v4
      - name: Download All Artifacts
        uses: actions/download-artifact@v4
        with:
          merge-multiple: true
          path: dist/
      - name: Publish distribution to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
